# -*- coding: utf-8 -*-
"""OOP lab.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TR1adkUDUD2bZSqvheNQIzuzdao6Tt8V
"""

def findmax(list):
  return max(list)
my_list = [3, 7, 2, 10, 5]
largest = findmax(my_list)
print("The largest element is:", largest)

import math

def hexagon_area(length):
    return (3 * math.sqrt(3) * (length ** 2)) / 2

side = 5
area = hexagon_area(side)
print("The area of the hexagon is:", area)

import re

def is_valid_email(email):
    pattern = r"^[a-zA-Z0-9][a-zA-Z0-9._%+-]{0,64}@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
    return True if re.match(pattern, email) and len(email) <= 256 else False

# Example usage:
email_address = "example@email.com"
validity = is_valid_email(email_address)
print("Is the email address valid?", validity)

def get_palindromes(s):
    words = s.split()
    palindromes = [word for word in words if word.lower() == word[::-1].lower()]
    return palindromes

# Example usage:
sentence = "Madam and racecar are palindromes"
palindrome_list = get_palindromes(sentence)
print("Palindromes in the sentence:", palindrome_list)

def encrypt(text, shift):
    encrypted_text = ""
    for char in text:
        if char.isalpha():
            shifted = ord(char) + shift
            if char.islower():
                if shifted > ord('z'):
                    shifted -= 26
                elif shifted < ord('a'):
                    shifted += 26
            elif char.isupper():
                if shifted > ord('Z'):
                    shifted -= 26
                elif shifted < ord('A'):
                    shifted += 26
            encrypted_text += chr(shifted)
        else:
            encrypted_text += char
    return encrypted_text

def decrypt(encrypted_text, shift):
    return encrypt(encrypted_text, -shift)

text = "Hello, World!"
shift_amount = 5
encrypted = encrypt(text, shift_amount)
print("Encrypted:", encrypted)
decrypted = decrypt(encrypted, shift_amount)
print("Decrypted:", decrypted)